 -------------W1D3---------------------------------

------------KYUNG KWAN JANG-----------------------
SELECT SYSDATE,
       LAST_DAY(SYSDATE)
  FROM DUAL;
 ALTER SESSION 
   SET NLS_DATE_LANGUAGE = 'AMERICAN';
 
--- OUR DEFAULT IS KOREAN
SELECT SYSDATE,
       NEXT_DAY(SYSDATE, 3),
       NEXT_DAY(SYSDATE, 'FRIDAY')
  FROM DUAL;
 ALTER SESSION 
   SET NLS_DATE_FORMAT = 'YYYY/MM/DD';
 
SELECT SYSDATE,
       ROUND(SYSDATE),
       TRUNC(SYSDATE)
  FROM DUAL;
 
--*** DATA TYPE CHANGE---------

-- YOU CAN'T CHANGE DATA TYPE TO THE SAME TYPE - YOU CAN GET AN ERROR
       1. TO_CHAR (, ) -- TO_CHAR( CHAR,) NOT POSSIBLE
       2. TO_NUMBER;
 3. TO_DATE 1) CHAR -> DATE 2) NUMBER -> DATE;
 
-- FORMAT NUMBER AS CURRENACY
SELECT 67000,
       TO_CHAR(67000, '$999,999.99'),
       LENGTH(TRIM(TO_CHAR(67000, '$999,999.99'))),
       TO_CHAR(67000, '9,9999.00')||'\'
  FROM DUAL;
 
SELECT 9846,
       TO_CHAR(9846, '$099999.99')
  FROM DUAL;
 
-- TO NUMBER
SELECT '1000' + 10 -- IT WILL PROCESS AS TO_NUMBER('1000') + 10. DON'T WRITE LIKE THIS.
  FROM DUAL;
 
SELECT TO_NUMBER(TRANSLATE(TO_CHAR(SYSDATE), '1/', '1'))
  FROM DUAL;
 
-- CHAR TO DATE--
SELECT SYSDATE,
       TO_CHAR(SYSDATE, 'RRRR/MON/DAY')
  FROM DUAL;
 ALTER SESSION 
   SET NLS_DATE_FORMAT = 'YYYY/MM/DD';
 
SELECT 19920122,
       TO_DATE(19920122, 'YYYY/MM/DD')
  FROM DUAL;
 
SELECT TO_DATE('2019/04/09', 'YYYY/MM/DD') + 130,
       TO_DATE('04/09', 'MM/DD') +130 -- '2019/04/09' + 200 DOESN'T WORK!! SINCE '2019/04/09' IS CHAR!
  FROM DUAL;
 
SELECT SYSDATE,
       TO_CHAR(SYSDATE, 'Q'),
       TO_CHAR(SYSDATE, 'DDSPTH')
  FROM DUAL;
 
--------!!!!!1---------------------------------------
SELECT TO_CHAR(TO_DATE('2019-01-22 14:30:52', 'YYYY-MM-DD HH24:MI:SS'), 'DAY')
  FROM DUAL;
 
--DATE TO CHAR USEFUL EXAMPLE--
SELECT ENAME || ''' was hired at ' || INITCAP(TO_CHAR(HIREDATE, 'RRRR-MON-DAY'))
  FROM EMP;
 
-- PRACTICE PROBLEM

-- STUDENT WITH 12-25/1975 AS BIRTHDAY. BUT USE THE DATE FORMAT AS SHOWN.

-----------------TEST QUESTION ALIKE!!!!!!---------------------------------
SELECT NAME,
       BIRTHDAY
  FROM STUDENT
 WHERE BIRTHDAY = TO_DATE('12-25/1975', 'MM-DD/RRRR');
 
--BETTER PERFORMANCE!!! SINCE YOU ARE ONLY PROCESSING ONE '12-25'1075'
SELECT NAME,
       BIRTHDAY
  FROM STUDENT
 WHERE TO_CHAR(BIRTHDAY, 'MM-DD/RRRR') = '12-25/1975';
 
-----------------------------------------------------------------------------

--PERFORMANCE EXAMPLE

-- PRINT NAME WITH 1.1* SAL THAT ARE LOWER THAN 3000
SELECT ENAME,
       SAL
  FROM EMP
 WHERE SAL < 3000/1.1;
 
-- VS. -------------
SELECT ENAME,
       SAL
  FROM EMP
 WHERE SAL*1.1 < 3000;
 
SELECT '12/05/2019',
       TO_DATE('12/05/2019', 'MM/DD/RRRR'),
       TO_CHAR(TO_DATE('12/05/2019', 'MM/DD/RRRR'), 'YYYY-MM-DD')
  FROM DUAL;
 
-- 01/22/1992 => 1992-01-22
SELECT '01/22/1992',
       TO_CHAR(TO_DATE('01/22/1992', 'MM/DD/YYYY'), 'YYYY-MM-DD')
  FROM DUAL;
 
------------------------------
SELECT HIREDATE - TO_DATE('1991/01/02')
  FROM EMP;
 
SELECT *
  FROM EMP
 WHERE HIREDATE = '1981-02-22';
  --- SHOULDN'T WORK. BUT WORKS THANKS TO AUTO CORRECT
SELECT *
  FROM EMP
 WHERE HIREDATE = TO_DATE('1981-02-22', 'YYYY-MM-DD');
  --BETTER!

--NVL NVL2--------------------------
SELECT ENAME,
       NVL(COMM, 0),
       SAL + COMM,
       SAL + NVL(COMM, 0)
  FROM EMP;
 
SELECT ENAME,
       NVL(COMM, 'E123') --- DOES NOT WORK!
  FROM EMP;
 
SELECT HPAGE,
       NVL(HPAGE, 'NONE'),
       NVL(HPAGE, 0) -- REASONS FOR THIS WORK: YOU CAN PUT NUMBER INTO CHAR (BUT TYPE WILL BE CHAR)
  FROM PROFESSOR;
 
SELECT ENAME,
       COMM,
       NVL2(COMM, 'YES', 'NO') --NVL2(X, #, $). # AND $ TYPE MUST BE THE SAME.
  FROM EMP;
 
SELECT ENAME,
       NVL2(COMM, 2, '이') -- DOESN'T WORK! BUT...
  FROM EMP;
 
SELECT ENAME,
       NVL2(COMM, '이', 2) -- '이' GETS INITIALIZE FIRST! THEREFORE IT CAN CONTAIN THIRD AS IT'S NUMBER. (CHAR > NUM)
  FROM EMP;
 
--DECODE ----------LOW ON PERFORMANCE-------------------

-- DECODE(조사대상, 조건, 조사대상 = 조건일때 치환할 값, 그 외)
SELECT DEPTNO,
       REPLACE(DEPTNO, 10, '인사부') --DON'T USE REPLACE
  FROM EMP;
 
SELECT DEPTNO,
       DECODE(DEPTNO, 10, '인사부', DEPTNO) --4TH WILL BECOME 'NULL'
  FROM EMP;
 
SELECT DEPTNO,
       DECODE(DEPTNO, 10, '인사부', 20, '공학', DEPTNO)
  FROM EMP;
  
SELECT DEPTNO, DECODE(DEPTNO, 101, DECODE(POSITION, '정교수', '후보', '아냐'), '아냐')
  FROM PROFESSOR;

SELECT DEPTNO, DECODE(DEPTNO, 101, DECODE(POSITION, '정교수', '후보', '아냐'), DECODE(....)
  FROM PROFESSOR;

SELECT SAL, DECODE(SIGN(SAL-3000),1, 'A', 0, 'A', -1, 'B'), DECODE(SIGN(SAL-3000),-1, 'B','A')
  FROM EMP;

SELECT DEPTNO,
       CASE DEPTNO
         WHEN 10 THEN '인사부'
         WHEN 20 THEN '공학'
         WHEN 30 THEN 'NURSE'
         ELSE 'ELSE'
         END "DEPTNO"
  FROM EMP;
 
SELECT SAL,
       CASE 
         WHEN SAL > 3000 THEN 'OKAY'
         WHEN SAL BETWEEN 3000 AND 2000 THEN 'WELL...'
         WHEN SAL < 2000 THEN 'GET OUT, GET OUT!'
         ELSE 'N/A'
         END "OPINION"
   FROM EMP;
