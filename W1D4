 --------------------------Week 1 Day 4 ---------------------------------

--===========CASE===============--
SELECT DEPTNO,
       CASE DEPTNO
         WHEN 10 THEN 'HR'
         WHEN 20 THEN 'ADMIN'
         ELSE 'FINANCE'
       END AS DEPARTMENT
  FROM EMP
  
  
 ORDER BY DEPTNO;
 
SELECT DEPTNO,
       CASE
         WHEN DEPTNO = 10 THEN 'HR'
         WHEN DEPTNO = 20 THEN 'ADMIN'
         ELSE 'FINANCE'
       END AS DEPARTMENT
  FROM EMP
 ORDER BY DEPTNO;
 
---- PRACTICE: PRINT SEX BASED ON JUMIN
SELECT NAME,
       SUBSTR(JUMIN, 7, 1),
       CASE SUBSTR(JUMIN, 7, 1)
         WHEN '1' THEN 'MALE'
         WHEN '2' THEN 'FEMALE'
         ELSE 'WTF?'
       END AS SEX
  FROM STUDENT;

--USING DECODE
SELECT NAME, DECODE(SUBSTR(JUMIN, 7, 1), '1', 'MALE', '2', 'FEMALE') -- DECODE AUTOMATICALLY CONVERT 1 TO '1'
  FROM STUDENT;
  
--===============COUNT================--
SELECT COUNT(*), COUNT(EMPNO), COUNT(COMM) FROM EMP;  ----* COUNT(*) INCLUDES NULL ALSO CHECK ALL COLUMN. ALSO CHECKS EVERY COLUMN
DESC EMP; ----* CHECK WHICH COLUMN HAS 'NOT NULL' -> CHECK 'NOT NULL' COLUMN! (THIS CASE EMPNO)

--============SUM========================
SELECT SUM(SAL)
  FROM EMP;
 
--=============AVG====================      **IMPARTANT!
SELECT SUM(COMM)/COUNT(EMPNO) AS AVERAGE1,  -- "COMM/14"
       AVG(COMM),                            -- AVG DOESN'T COUNT NULL! THUS "COMM/4""
       AVG(NVL(COMM,0))                      -- "COMM/14" - NOW NO MORE NULL!
  FROM EMP;
  
--============MIN/MAX==================
SELECT MIN(SAL), MAX(SAL)
  FROM EMP;
  
--=====================================GROUP BY-===================
SELECT DEPTNO, ROUND(AVG(SAL),0), COUNT(DEPTNO), MAX(SAL)    -- YOU CAN'T HAVE PERSON WITH THE MOST SAL, WITH 단일QUERY!!
  FROM EMP
 GROUP BY DEPTNO;           --- ONCE USED ROW WILL BE LIMITED TO NUMBER OF DISTINT VARIABLE!
 
SELECT DEPTNO, ROUND(AVG(SAL),0), COUNT(DEPTNO), MAX(SAL), ENAME = SELECT(ENAME FROM EMP WHERE SAL = MAX(SAL))
  FROM EMP
 GROUP BY DEPTNO; 
 
SELECT GRADE, AVG(HEIGHT), MAX(HEIGHT)
  FROM STUDENT
 GROUP BY GRADE;
 
 -- FIND A GROUP THAT AVRAGE HEIGH IS LOWER THAN 170 
SELECT GRADE
  FROM STUDENT
 WHERE AVG(HEIGHT) < 170  ---YOU CAN NOT USE AVG ON WHERE WHEN GROUP BY IS USED!
 GROUP BY GRADE;
 
SELECT GRADE
  FROM STUDENT
 GROUP BY GRADE
HAVING AVG(HEIGHT) < 170; -- SO WE USE HAVING

-----PRACTICE QUESTIONS!------
--FIND GRADE 1 AN 2 'S AVG HEIGHT
SELECT GRADE, AVG(HEIGHT)  --- NOT GOOD!--
  FROM STUDENT
 GROUP BY GRADE
HAVING GRADE IN (1,2);

SELECT GRADE, AVG(HEIGHT)  -----------MORE EFFICIENT! WHERE USUALLY MAKES MORE EFFICIENT
  FROM STUDENT
 WHERE GRADE IN (1,2)
GROUP BY GRADE;
 
--=================UNION AKA 집합 연산자===================================
SELECT ENAME, SAL, DEPTNO
  FROM EMP
 WHERE DEPTNO = 10;

SELECT ENAME, SAL, DEPTNO
 FROM EMP
 WHERE DEPTNO = 10
 UNION ALL
SELECT ENAME, SAL, DEPTNO
  FROM EMP
 WHERE DEPTNO = 20
ORDER BY SAL DESC;
  
SELECT ENAME, SAL, DEPTNO
 FROM EMP
 WHERE DEPTNO = 10
 MINUS
SELECT ENAME, SAL, DEPTNO
  FROM EMP
 WHERE DEPTNO = 20
ORDER BY SAL DESC;

---EMP AND EMPLOYEES TABLES UNION OR ELSE
DESC EMP;    --DATA
DESC EMPLOYEES;

SELECT EMPNO, ENAME
  FROM EMP
UNION ALL
SELECT EMPLOYEE_ID, LAST_NAME
  FROM EMPLOYEES;
  
  
--============================JOIN !!=====================================
SELECT * FROM DEPT;
SELECT * FROM EMP;

SELECT * FROM EMP, DEPT;

SELECT *
  FROM EMP,
       DEPT
 WHERE EMP.DEPTNO = DEPT.DEPTNO;

SELECT EMPNO, ENAME, SAL, EMP.DEPTNO, DNAME    --WHEN TWO COLOUM NAMES ARE THE SAME, DECLARE TABLE
  FROM EMP, DEPT
 WHERE EMP.DEPTNO = DEPT.DEPTNO;
 
--CARTESIAN PRODUCT 발생!
SELECT *        -- NOW 56 ROWS (14 * 4)
  FROM EMP, DEPT;
 
 SELECT EMP.*, DEPT.*
   FROM EMP, DEPT
  WHERE EMP.DEPTNO = DEPT.DEPTNO;
  
SELECT EMP.*, SAL*1.1 -------TABLE.* 1.1 DOESN'T WORK!
  FROM EMP;
 
SELECT E.*, SAL*1.1
  FROM EMP E;           --** TABLE ALIAS!! AS!!! NOT DON'T PUT AS
  
SELECT EMP.*        -- DOESN'T WORK!!
  FROM EMP E;
  
--Q)----JOIN PEACTICE QUESTION!!------
SELECT * FROM STUDENT;
SELECT * FROM DEPARTMENT;

SELECT NAME,
       GRADE,
       DEPTNO1,
       DNAME
  FROM STUDENT,
       DEPARTMENT
 WHERE DEPTNO1 = DEPTNO
   AND GRADE IN (2,
               3)
 ORDER BY DEPTNO1;
 
 --Q)----ANOTHER JOIN Q---------------]
 --위 데이터를 활용하여 전공별 학생수 출려하외 전공 번호 (DEPTNO1)
 SELECT DNAME, DEPTNO1, COUNT(NAME) AS "수"      -----------!!--!!  TWO THINGS AT THE SAME TIME!
  FROM STUDENT, DEPARTMENT
 WHERE DEPTNO1 = DEPTNO
  GROUP BY DNAME, DEPTNO1;
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
